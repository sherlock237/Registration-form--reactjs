{"version":3,"sources":["logo.svg","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Form","props","firsthandler","event","setState","firstName","target","value","lasthandler","lastName","passwordhandler","password","genderhandler","gender","handleSubmit","alert","state","console","log","window","location","reload","preventDefault","bind","onSubmit","this","type","onChange","placeholder","style","width","required","defaultValue","id","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gOAAe,I,uDCmFAA,E,kDA7EX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAaVC,aAAe,SAACC,GACZ,EAAKC,SAAS,CACVC,UAAWF,EAAMG,OAAOC,SAhBb,EAmBnBC,YAAc,SAACL,GACX,EAAKC,SAAS,CACVK,SAAUN,EAAMG,OAAOC,SArBZ,EAwBnBG,gBAAkB,SAACP,GACf,EAAKC,SAAS,CACVO,SAAUR,EAAMG,OAAOC,SA1BZ,EA8BnBK,cAAgB,SAACT,GACb,EAAKC,SAAS,CACVS,OAAQV,EAAMG,OAAOC,SAhCV,EAoCnBO,aAAe,SAACX,GACZY,MAAM,WAAD,OAAY,EAAKC,MAAMX,UAAvB,2BAAmD,EAAKW,MAAMP,SAA9D,wBAAsF,EAAKO,MAAMH,OAAjG,0BAAyH,EAAKG,MAAML,SAApI,sCACLM,QAAQC,IAAI,EAAKF,OACjB,EAAKZ,SAAS,CACVC,UAAW,GACXI,SAAU,GACVE,SAAU,GACVE,OAAQ,KAEZM,OAAOC,SAASC,SACnBlB,EAAMmB,kBA3CH,EAAKN,MAAQ,CACTX,UAAW,GACXI,SAAU,GACVE,SAAU,GACVE,OAAQ,IAIZ,EAAKC,aAAa,EAAKA,aAAaS,KAAlB,gBAXH,E,0CAqDnB,WACI,OACI,8BAEI,uBAAMC,SAAUC,KAAKX,aAArB,UACI,mDACA,gDAFJ,IAE+B,uBAAOY,KAAK,OAAOnB,MAAOkB,KAAKT,MAAMX,UAAWsB,SAAUF,KAAKvB,aAAc0B,YAAY,eAAeC,MAAO,CAACC,MAAO,QAASC,UAAQ,IAAE,uBACrK,+CAHJ,IAG8B,uBAAOL,KAAK,OAAOnB,MAAOkB,KAAKT,MAAMP,SAAUkB,SAAUF,KAAKjB,YAAaoB,YAAY,cAAcC,MAAO,CAACC,MAAO,QAASC,UAAQ,IAAE,uBACjK,+CAJJ,IAI8B,uBAAOL,KAAK,WAAWnB,MAAOkB,KAAKT,MAAML,SAAUgB,SAAUF,KAAKf,gBAAiBkB,YAAY,cAAcC,MAAO,CAACC,MAAO,QAASC,UAAQ,IAAE,uBACzK,6CALJ,aAKyC,yBAAQJ,SAAUF,KAAKb,cAAeoB,aAAa,SAASH,MAAO,CAACC,MAAO,QAAQC,UAAQ,EAA3F,UACjC,wBAAQxB,MAAM,GAAd,2BACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,SAAd,uBACK,uBACT,uBAAO0B,GAAG,SAASP,KAAK,SAASnB,MAAM,oB,GApExC2B,aCOJC,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCKSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.eee8e562.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport './CSS/todo.css'\n\n\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            gender: \"\",\n\n\n        }\n        this.handleSubmit=this.handleSubmit.bind(this)\n    }\n\n    firsthandler = (event) => {\n        this.setState({\n            firstName: event.target.value\n        })\n    }\n    lasthandler = (event) => {\n        this.setState({\n            lastName: event.target.value\n        })\n    }\n    passwordhandler = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n    }\n\n    genderhandler = (event) => {\n        this.setState({\n            gender: event.target.value\n        })\n    }\n\n    handleSubmit = (event) => {\n        alert(`NAME:-  ${this.state.firstName} \\nLAST NAME:-  ${this.state.lastName} \\nGENDER:-  ${this.state.gender} \\nPASSWORD:-  ${this.state.password} \\n\\nRegistered Successfully !!!!`)\n        console.log(this.state);\n        this.setState({\n            firstName: \"\",\n            lastName: \"\",\n            password: '',\n            gender: \"\",\n        })\n        window.location.reload();\n     event.preventDefault()\n        \n    }\n\n\n\n\n    render() {\n        return (\n            <div>\n\n                <form onSubmit={this.handleSubmit}>\n                    <h1>User Registration</h1>\n                    <label>FirstName :</label> <input type=\"text\" value={this.state.firstName} onChange={this.firsthandler} placeholder=\"FirstName...\" style={{width: 'auto'}} required/><br />\n                    <label>LastName :</label> <input type=\"text\" value={this.state.lastName} onChange={this.lasthandler} placeholder=\"LastName...\" style={{width: 'auto'}} required/><br />\n                    <label>Password :</label> <input type=\"password\" value={this.state.password} onChange={this.passwordhandler} placeholder=\"Password...\" style={{width: 'auto'}} required/><br />\n                    <label>Gender :</label>&nbsp; &nbsp; <select onChange={this.genderhandler} defaultValue=\"Gender\" style={{width: 'auto'}}required >\n                        <option value=\"\">Select Gender</option>\n                        <option value=\"male\">Male</option>\n                        <option value=\"female\">Female</option>\n                    </select><br />\n                    <input id=\"submit\" type=\"submit\" value=\"Submit\" />\n                </form>\n\n            </div>\n           \n            \n        )\n    }\n}\n\nexport default Form\n","import logo from './logo.svg';\nimport './App.css';\nimport Form from './Components/Form'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}